"use strict";(self.webpackChunk_cloudpub_docs=self.webpackChunk_cloudpub_docs||[]).push([[950],{4222:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"http","title":"HTTP and HTTPS Services","description":"Publishing HTTP Services","source":"@site/docs/http.md","sourceDirName":".","slug":"/http","permalink":"/docs/http","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"slug":"/http"},"sidebar":"tutorialSidebar","previous":{"title":"Quick Start","permalink":"/docs/"},"next":{"title":"TCP and UDP Services","permalink":"/docs/tcp"}}');var t=i(4848),r=i(8453);const l={sidebar_position:2,slug:"/http"},c="HTTP and HTTPS Services",a={},h=[{value:"Publishing HTTP Services",id:"publishing-http-services",level:2},{value:"Publishing HTTPS Services",id:"publishing-https-services",level:2},{value:"HTTP and HTTPS Request Headers",id:"http-and-https-request-headers",level:2}];function o(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"http-and-https-services",children:"HTTP and HTTPS Services"})}),"\n",(0,t.jsx)(s.h2,{id:"publishing-http-services",children:"Publishing HTTP Services"}),"\n",(0,t.jsx)(s.p,{children:"To publish a local HTTP server running on a local interface, simply execute the command:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"clo publish http 8080\n"})}),"\n",(0,t.jsx)(s.p,{children:"where 8080 is the port on which your server is running."}),"\n",(0,t.jsx)(s.p,{children:"After executing the command, you will receive a message that your service has been published:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"Service published: http://localhost:8080 -> https://wildly-suitable-fish.cloudpub.online\n"})}),"\n",(0,t.jsx)(s.p,{children:"The service will be publicly available via HTTPS protocol, and we will automatically generate a certificate for this domain."}),"\n",(0,t.jsx)(s.p,{children:"If you need to publish a service running on another host in the local network, you can specify the IP address or host when publishing:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"clo publish http 192.168.1.1:80\n"})}),"\n",(0,t.jsx)(s.p,{children:"In this case, the service will be published on the specified IP address and port (in this example, it could be your router's admin panel)"}),"\n",(0,t.jsx)(s.h2,{id:"publishing-https-services",children:"Publishing HTTPS Services"}),"\n",(0,t.jsx)(s.p,{children:"Publishing HTTPS services is similar to publishing HTTP services, but with specifying the HTTPS protocol:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"clo publish https 443\n"})}),"\n",(0,t.jsx)(s.h2,{id:"http-and-https-request-headers",children:"HTTP and HTTPS Request Headers"}),"\n",(0,t.jsx)(s.p,{children:"When publishing HTTP and HTTPS services, you can override or specify additional headers that will be added to requests sent to your local server."}),"\n",(0,t.jsxs)(s.p,{children:["This can be useful if your server requires certain headers to work, for example, a ",(0,t.jsx)(s.code,{children:"Host"})," header matching the local server address (",(0,t.jsx)(s.code,{children:"localhost"}),")"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"clo publish -H Host:localhost https 443\n"})})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>l,x:()=>c});var n=i(6540);const t={},r=n.createContext(t);function l(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);