"use strict";(self.webpackChunk_cloudpub_docs=self.webpackChunk_cloudpub_docs||[]).push([[458],{7834:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"docker","title":"Docker Image","description":"Using CloudPub with Docker","source":"@site/docs/docker.md","sourceDirName":".","slug":"/docker","permalink":"/docs/docker","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":98,"frontMatter":{"sidebar_position":98,"description":"Using CloudPub with Docker","slug":"/docker"},"sidebar":"tutorialSidebar","previous":{"title":"Authentication and Access Control","permalink":"/docs/auth"},"next":{"title":"Command Line Parameters","permalink":"/docs/cli"}}');var r=o(4848),t=o(8453);const i={sidebar_position:98,description:"Using CloudPub with Docker",slug:"/docker"},c="Docker Image",l={},a=[{value:"Using CloudPub with Docker",id:"using-cloudpub-with-docker",level:2},{value:"Preserving Settings on Container Restart",id:"preserving-settings-on-container-restart",level:2},{value:"Publishing Multiple Resources at Once",id:"publishing-multiple-resources-at-once",level:2},{value:"Version for ARM Processors",id:"version-for-arm-processors",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"docker-image",children:"Docker Image"})}),"\n",(0,r.jsx)(n.h2,{id:"using-cloudpub-with-docker",children:"Using CloudPub with Docker"}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ready-made ",(0,r.jsx)(n.a,{href:"https://hub.docker.com/repository/docker/cloudpub/cloudpub/general",children:"Docker image"})," for the CloudPub agent."]}),"\n",(0,r.jsx)(n.p,{children:"Example command to run a tunnel to port 8080 on the host machine looks like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker run --net=host -it -e TOKEN=xyz cloudpub/cloudpub:latest publish http 8080\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"The Docker version uses the same command line parameters as the regular version."})}),"\n",(0,r.jsxs)(n.p,{children:["For macOS or Windows users, the ",(0,r.jsx)(n.code,{children:"--net=host"})," option will not work."]}),"\n",(0,r.jsxs)(n.p,{children:["You will need to use the special URL host.docker.internal, as described in the Docker ",(0,r.jsx)(n.a,{href:"https://docs.docker.com/desktop/mac/networking/#use-cases-and-workarounds",children:"documentation"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker run --net=host -it -e TOKEN=xyz cloudpub/cloudpub:latest \\\n       publish http host.docker.internal:8080\n"})}),"\n",(0,r.jsx)(n.h2,{id:"preserving-settings-on-container-restart",children:"Preserving Settings on Container Restart"}),"\n",(0,r.jsx)(n.p,{children:"When starting a container, CloudPub creates a new agent and a new unique URL for tunnel access."}),"\n",(0,r.jsx)(n.p,{children:"To preserve settings on container restart, you should create a volume for storing configuration and cache:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker volume create cloudpub-config\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then, when starting the container, you should use this volume:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker run -v cloudpub-config:/home/cloudpub --net=host -it -e TOKEN=xyz \\\n              cloudpub/cloudpub:latest publish http 8080\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In this case, all agent settings will be saved in the ",(0,r.jsx)(n.code,{children:"cloudpub-config"})," volume and will be available on the next container start."]}),"\n",(0,r.jsx)(n.h2,{id:"publishing-multiple-resources-at-once",children:"Publishing Multiple Resources at Once"}),"\n",(0,r.jsx)(n.p,{children:"You can specify multiple resources for publication in environment variables, separating them with commas:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker run -v cloudpub-config:/home/cloudpub --net=host -it\\\n              -e TOKEN=xyz \\\n              -e HTTP=8080,8081 \\\n              -e HTTPS=192.168.1.1:80 \\\n              cloudpub/cloudpub:latest run\n"})}),"\n",(0,r.jsx)(n.p,{children:"The environment variable name matches the protocol name. The following protocols are available:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"HTTP"}),"\n",(0,r.jsx)(n.li,{children:"HTTPS"}),"\n",(0,r.jsx)(n.li,{children:"TCP"}),"\n",(0,r.jsx)(n.li,{children:"UDP"}),"\n",(0,r.jsx)(n.li,{children:"WEBDAV"}),"\n",(0,r.jsx)(n.li,{children:"MINECRAFT"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-for-arm-processors",children:"Version for ARM Processors"}),"\n",(0,r.jsxs)(n.p,{children:["For ARM processors, the image ",(0,r.jsx)(n.code,{children:"cloudpub/cloudpub:latest-arm64"})," is available"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var s=o(6540);const r={},t=s.createContext(r);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);