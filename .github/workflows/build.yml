name: Build Multi-Architecture Binaries

on:
  push:
    branches: [ main, develop, mipsel_build_add, mips_build_add ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build multi-architecture binaries with Docker
      uses: docker/build-push-action@v5
      with:
        context: .
        target: artifacts
        platforms: linux/amd64
        outputs: type=local,dest=./artifacts
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: List built artifacts
      run: |
        echo "Built artifacts:"
        find artifacts -type f -exec file {} \;
        ls -la artifacts/*/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cloudpub-binaries-${{ github.sha }}
        path: artifacts/
        retention-days: 30

    - name: Create release assets
      if: github.event_name == 'release'
      run: |
        mkdir -p release-assets
        
        # Create compressed archives for each architecture
        cd artifacts
        
        # Windows x64
        zip -j ../release-assets/cloudpub-win64.zip win64/clo.exe
        
        # Linux x86_64
        tar -czf ../release-assets/cloudpub-linux-x86_64.tar.gz -C x86_64 clo
        
        # Linux ARM64
        tar -czf ../release-assets/cloudpub-linux-aarch64.tar.gz -C aarch64 clo
        
        # Linux ARM
        tar -czf ../release-assets/cloudpub-linux-arm.tar.gz -C arm clo
        
        # Linux ARMv5TE
        tar -czf ../release-assets/cloudpub-linux-armv5te.tar.gz -C armv5te clo
        
        # Linux MIPS (little-endian)
        tar -czf ../release-assets/cloudpub-linux-mipsel.tar.gz -C mipsel clo
        
        # Linux MIPS (big-endian)
        tar -czf ../release-assets/cloudpub-linux-mips.tar.gz -C mips clo
        
        cd ..
        ls -la release-assets/

    - name: Upload release assets
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: cloudpub-release-assets-${{ github.event.release.tag_name }}
        path: release-assets/
        retention-days: 90

  # Optional: Upload release assets to GitHub Release
  upload-to-release:
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Download release assets
      uses: actions/download-artifact@v4
      with:
        name: cloudpub-release-assets-${{ github.event.release.tag_name }}
        path: release-assets/

    - name: Upload release assets to GitHub
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/*
        token: ${{ secrets.GITHUB_TOKEN }}
